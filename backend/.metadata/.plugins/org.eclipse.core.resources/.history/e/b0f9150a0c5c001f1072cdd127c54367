package com.example.doctor_application.contoller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DuplicateKeyException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RestController;

import com.example.doctor_application.dao.DoctorDao;
import com.example.doctor_application.dto.Doctor;

import jakarta.persistence.EntityNotFoundException;

@RestController
public class DoctorController {
	
	@Autowired
	private DoctorDao doctorDao;
	@GetMapping("/")
	public ResponseEntity<?> test()
	{
		System.out.println("Working");
		return ResponseEntity.ok(200);
	}
	
	@PostMapping("/doctor/sign_up")
	public ResponseEntity<?> signUp(@RequestBody Doctor newdoctor)
	{
		System.out.println(newdoctor);
		try {
			 Doctor savedDoctor = doctorDao.signUp(newdoctor);
	         return ResponseEntity.status(HttpStatus.CREATED).body(savedDoctor);
		} 
		 catch ( DuplicateKeyException e) {
				// TODO: handle exception
				return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(e.getMessage());
			}
		catch (Exception e) {
			// TODO: handle exception
			  return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Error occurred while signing up the doctor: " + e.getMessage());
		}
	}
	
	@PostMapping("/doctor/login")
	public ResponseEntity<?> login(@RequestHeader("email") String email,@RequestHeader("password") String password)
	{
		
		System.out.println(email+""+password);
		try {
			Doctor doctor=doctorDao.login(email, password);
			return ResponseEntity.status(200).body(doctor);
		}  catch (EntityNotFoundException e) {
			// TODO: handle exception
			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(e.getMessage());
		}
	     catch (Exception e) {
		// TODO: handle exception
		  return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Error occurred while signing up the doctor: " + e.getMessage());
	}
	}

}
