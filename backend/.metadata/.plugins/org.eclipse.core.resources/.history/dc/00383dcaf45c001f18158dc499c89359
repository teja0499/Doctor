package com.example.doctor_application.contoller;

import java.io.File;
import java.util.List;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.example.doctor_application.dao.PatientDao;
import com.example.doctor_application.dto.Patient;

@RestController
public class PatientController {

	@Autowired
	private PatientDao pDao;
	
	private String uploadDir;
	 @PostMapping("/patient/sign_up")
	    public ResponseEntity<?> signUp(
	            @RequestParam("name") String name,
	            @RequestParam("email") String email,
	            @RequestParam("mobileNumber") String mobileNumber,
	            @RequestParam("illness") String illness,
	            @RequestParam("surgery") String surgery,
	            @RequestParam("age") int age,
	            @RequestParam("password") String password,
	            @RequestParam(value = "profilePicture", required = false) MultipartFile profilePicture) {
	        try {
	            Patient newpatient = new Patient();
	            newpatient.setName(name);
	            newpatient.setEmail(email);
	            newpatient.setMobileNumber(mobileNumber);
	            newpatient.setIllness(illness);
	            newpatient.setSurgery(surgery);
	            newpatient.setAge(age);
	            newpatient.setPassword(password);

	            // Handle the file upload here if needed
	            if (profilePicture != null && !profilePicture.isEmpty()) {
	                String fileName = System.currentTimeMillis() + "_user_" + mobileNumber;
	                File file = new File(uploadDir + File.separator + fileName);
	                profilePicture.transferTo(file);
	              
	            }
	            Patient patient = pDao.signUp(newpatient);
	            return ResponseEntity.status(HttpStatus.OK).body(patient);
	        } catch (Exception e) {
	            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(e.getMessage());
	        }
	    }
	
	@PostMapping("/patient/login")
	public ResponseEntity<?> login(@RequestHeader("email") String email,@RequestHeader("password") String password)
	{
		System.out.println("working");
		try {
			Patient patient=pDao.login(email, password);
			return ResponseEntity.status(200).body(patient);
		} catch (Exception e) {
			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(e.getMessage());
		}
	}
	
	@GetMapping("/admin/get_users")
	public ResponseEntity<?> getUsers()
	{
		System.out.println("working");
		try {
			List<Patient> patient=pDao.getAllUser();
			return ResponseEntity.status(200).body(patient);
		} catch (Exception e) {
			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(e.getMessage());
		}
	}
}
